"""
Задание 3.

Для этой задачи:
1) придумайте 1-3 решения (желательно хотя бы два)
2) оцените сложность каждого решения в нотации О-большое
3) сделайте вывод, какое решение эффективнее и почему

Примечание:
Без выполнения пунктов 2 и 3 задание считается нерешенным. Пункты 2 и 3 можно выполнить
через строки документации в самом коде.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.


Сама задача:
Имеется хранилище с информацией о компаниях: название и годовая прибыль.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, реализовать словарь.
Реализуйте поиск трех компаний с наибольшей годовой прибылью.
Выведите результат.
"""
info_company = {'Company_1': 2234564,'Company_2': 1234565,
                'Company_3': 1234566,'Company_4': 1234567,'Company_5': 1234568}

# def best_company(list_company):
#     list_dict = list(list_company.items())
#     list_dict.sort(key=lambda pair: (pair[1],pair[0]), reverse=True)
#     print(f'Название компании : Годовая прибыль')
#
#     for i in range(3):
#      print (f"{list_dict[i][0]:<15}   : {list_dict[i][1]:>15}")
#
#
# best_company(info_company)
info_company_copy = {}
count = 0

print(info_company)
print(list(info_company.items()))
a = list()
b = list()
for k,v in list(info_company.items()):
    a.append(k)
    b.append(v)
min_num = b[0]
for i in range(len(b) - 1):
    if b > b[i + 1]:
        min_num = list_number[i + 1]
print(sorted(b))

